// Code generated by goctl. DO NOT EDIT.
// Source: id_gen.proto

package idgenerator

import (
	"context"

	"id_generator/service/id_generator"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdGenRequest  = id_generator.IdGenRequest
	IdGenResponse = id_generator.IdGenResponse

	IdGenerator interface {
		GenId(ctx context.Context, in *IdGenRequest, opts ...grpc.CallOption) (*IdGenResponse, error)
	}

	defaultIdGenerator struct {
		cli zrpc.Client
	}
)

func NewIdGenerator(cli zrpc.Client) IdGenerator {
	return &defaultIdGenerator{
		cli: cli,
	}
}

func (m *defaultIdGenerator) GenId(ctx context.Context, in *IdGenRequest, opts ...grpc.CallOption) (*IdGenResponse, error) {
	client := id_generator.NewIdGeneratorClient(m.cli.Conn())
	return client.GenId(ctx, in, opts...)
}
